# cloudbuild.yaml  For trigger from within cloud build

steps:
#  TODO - add ci part here??
# TODO migrations

  - id: "build django container image"
    name: "gcr.io/cloud-builders/docker"
    args: [
        "build",
        "-t",
        # Artifact registry image name in form: HOST-NAME/PROJECT-ID/REPOSITORY/IMAGE
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}",
        # docker context _root  (where you'd find the Dockerfile in project to build/ push)
        "djangoproject/.",
      ]
    # waitFor:
    # - RUN_TESTS
  # This is ~ as:
  #  $ docker build  -t  northamerica-northeast1-docker.pkg.dev/$PROJECT_ID/hello-world-app/hello-world djangoproject/.


  - id: "push django image to artifact registry"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}",
      ]

# # from https://github.com/GoogleCloudPlatform/opentelemetry-cloud-run/blob/main/cloudbuild.yaml
#   - name: "gcr.io/cloud-builders/docker"
#     args: ["build", "-t", "${_IMAGE_COLLECTOR}", "./collector"]
#     id: BUILD_COLLECTOR
#     waitFor: ["-"]

# # from https://github.com/GoogleCloudPlatform/opentelemetry-cloud-run/blob/main/cloudbuild.yaml
#   - name: "gcr.io/cloud-builders/docker"
#     args: ["push", "${_IMAGE_COLLECTOR}"]
#     id: PUSH_COLLECTOR
#     waitFor:
#       - BUILD_COLLECTOR
#   # This is the ~ to:
#   # $ docker push northamerica-northeast1-docker.pkg.dev/$PROJECT_ID/hello-world-app/hello-world


  - id: "deploy container image to cloud run"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_CLOUD_RUN_SERVICE_NAME}",
        "--image",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}",
        "--region",
        "${_REGION}",
        "--add-cloudsql-instances",
        "${PROJECT_ID}:${_REGION}:${_SQL_INSTANCE_NAME}", 
        "--set-secrets",
        "DATABASE_URL=hello-world-env-secret-DATABASE_URL:latest",
        "--platform", 
        "managed",
        "--allow-unauthenticated",   
      ]
  
# # Similar to:
# gcloud run deploy hello-world --image northamerica-northeast1-docker.pkg.dev/$PROJECT_ID/hello-world-app/hello-world:ccf605a9a6c895ccbdb0ed56eaeb8273de26d7f9 --region northamerica-northeast1  --add-cloudsql-instances\
#  $PROJECT_ID:$REGION:hello-world-sql-instance --set-secrets DATABASE_URL=hello-world-env-secret-DATABASE_URL:latest --platform managed --allow-unauthenticated

#  from https://cloud.google.com/blog/topics/developers-practitioners/running-database-migrations-cloud-run-jobs
  # - id: "server migrate"
  #   name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
  #   entrypoint: gcloud
  #   args: ["beta", "run", "jobs", "execute", "migrate-database",
  #          "--region", $_REGION, "--wait"]

  # - id: "run migrations"
  #   entrypoint: gcloud
  #   name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  #   args: ["beta", "run", "jobs", "execute", "migrate-test",
  #           "--region", $_REGION, "--wait"]
  #   gcloud beta run jobs execute migrate-database --region $REGION --wait
  #   waitFor:
  #   - "deploy container image to cloud run"



substitutions:
  # The must start with a "_" (_[A-Z0-9_]+)
  _ARTIFACT_REGISTRY_REPO: "hello-world-app"
  _SERVICE_NAME: "hello-world"
  _CLOUD_RUN_SERVICE_NAME: "hello-world-from-cloud-build-trigger"
  _REGION: "northamerica-northeast1"
  _SQL_INSTANCE_NAME: "hello-world-sql-instance"

images:
  - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}"
  # - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/run-otel-example

