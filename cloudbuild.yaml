# cloudbuild.yaml

# # Modified from 
  # https://github.com/daneroo/phac-garden/blob/main/apps/site-nginx/cloudbuild.yaml
# # Other referencs:
  # https://cloud.google.com/artifact-registry/docs/configure-cloud-build
  #  https://kevinsimper.medium.com/building-docker-images-with-docker-compose-on-google-cloud-container-builder-292b1eb3fd31
  # https://medium.com/kunder/how-to-integrate-github-checks-with-google-cloud-build-and-python-tests-5fd05c4f3dff

# This has 3 steps and set up in Cloud Build (console) to trigger on push to main branch


steps:
  # - name: python:3.9
  #   id: INSTALL
  #   entrypoint: python3
  #   args:
  #   - '-m'
  #   - 'pip'
  #   - 'install'
  #   - '-t'
  #   - '.'
  #   - '-r'
  #   - 'djangoproject/requirements.txt'
    # python3 -m pip uninstall -t . -r djangoproject/requirements.txt
# Create and activate virtual environment
  - name: 'python:3.9'
    id: CREATE_VENV
    entrypoint: 'python'
    args: ['-m', 'venv', 'venv']

  - name: 'python:3.9'
    id: ACTIVATE_VENV
    entrypoint: 'source'
    args: ['venv/bin/activate']

# Install dependencies
  - name: 'python:3.9'
    id: INSTALL_DEPENDENCIES
    entrypoint: 'pip'
    args: ['install', '-r', 'djangoproject/requirements.txt']

# Run tests
  - name: 'python:3.9'
    id: RUN_TESTS
    entrypoint: 'python'
    args: ['djangoproject/manage.py', 'test', 'hello_world']

  # # Install dependencies
  # - name: 'python:3.9'
  #   id: INSTALL_DEPENDENCIES
  #   entrypoint: 'pip'
  #   args: ['install', '-r', 'djangoproject/requirements.txt']
  #   # pip install -r djangoproject/requirements.txt


  # # Run tests
  # - name: 'python:3.9'
  #   id: TESTS
  #   entrypoint: 'python'
  #   args: ['djangoproject/manage.py', 'test', 'hello_world']
  # # python djangoproject/manage.py test hello_world

# # Unit tests
#   - name: python:3.9
#     entrypoint: python3
#     id: RUN-UNIT-TESTS
#     args:
#     - '-m'
#     - 'nose2'
#     - '-s'
#     - 'functions'
#     - '-c'
#     - 'functions/nose2.cfg'
#     waitFor:
#     - INSTALL

# # Test coverage
#   - name: python:3.9
#     entrypoint: python3
#     id: RUN-COVERAGE-TESTS
#     args:
#     - '-c'
#     - 'import sys; from pycobertura import Cobertura, TextReporter; cobertura = Cobertura("functions/coverage.xml"); tr = TextReporter(cobertura); coverage = tr.generate().split(" ")[-1].strip("%"); print("Coverage OK:",coverage + "% > 90%") if float(coverage) > 90 else sys.exit("Coverage is less than 90%")'
#     waitFor:
#     - RUN-UNIT-TESTS

# # Lint
#   - name: python:3.9
#     entrypoint: python3
#     id: RUN-LINTER-CHECK
#     args:
#     - '-m'
#     - 'flake8'
#     - '--ignore=E501'
#     - 'functions/'
#     waitFor:
#     - INSTALL
#  python djangoproject/manage.py check 
#  or 
#  flake8 .

# Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: [
        "build",
        "-t",
        # Artifact registry image name in form: HOST-NAME/PROJECT-ID/REPOSITORY/IMAGE
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}",
        # docker context _root  (where you'd find the Dockerfile in project to build/ push)
        "djangoproject/.",
      ]
    # waitFor:
    # - RUN-UNIT-TESTS
  # This is ~ as:
  #  $ docker build  -t  northamerica-northeast1-docker.pkg.dev/phx-hellodjango/hello-world-app/hello-world djangoproject/.


# Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}",
      ]
  # This is the ~ to:
  # $ docker push northamerica-northeast1-docker.pkg.dev/phx-hellodjango/hello-world-app/hello-world


# Deploy container image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--image"
      - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}"
      - "--region"
      - "${_REGION}"
      - "--allow-unauthenticated"
# Similar to:
#$ gcloud run deploy hello-world-app --image northamerica-northeast1-docker.pkg.dev/phx-hellodjango/hello-world-app/hello-world --region northamerica-northeast1 --allow-unauthenticated

substitutions:
  # The must start with a "_" (_[A-Z0-9_]+)
  _ARTIFACT_REGISTRY_REPO: "hello-world-app"
  _SERVICE_NAME: "hello-world"
  _REGION: "northamerica-northeast1"

images:
  - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${COMMIT_SHA}"


# # connect cloud build with github
# can do through console

# # cloud build trigger creation

